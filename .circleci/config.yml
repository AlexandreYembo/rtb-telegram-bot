version: 2.1
defaults: &defaults
  environment:
    PROJECT: realtime-bus
    BOT_NAME: RealTimeBot.js
  #working_directory: ~/${PROJECT}
  docker:
     - image: circleci/node:10.16.0
only-user-acceptance: &only-user-acceptance
  filters:
    branches:
      only:
        - user-acceptance
only-releasable: &only-releasable
  filters:
    branches:
      only:
        - develop
        - patch
non-releasable: &non-releasable
  filters:
    branches:
      ignore:
        - master
        - develop
        - patch
        
jobs:
  build-app:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Build Project
          command: |
            #cd ${PROJECT}
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test-app:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Bot Test
          command: |
            message="I am online for about 8 minutes for testing\n"
            curl -s \
              -X POST \
              -d chat_id=${GROUP_TELEGRAM_ID} \
              -d text="$(echo -e ${message})" \
              https://api.telegram.org/bot${RTB_TELEGRAM_BOT_TOKEN}/sendMessage
            
            sed -i 's/${RTB_TELEGRAM_BOT_TOKEN}/'${RTB_TELEGRAM_BOT_TOKEN}/ config.json
            
            #Bot will run for 8 min for testing
            #8 min because circleCi will automatically fail on timeout in 10 min
            timeout 480 node ${BOT_NAME} || true

            message="I am shutting down now\n"
            message+="Thanks for testing!\n\n"
            message+="If you want to run the same test, trigger the following url again...\n"
            message+="https://circleci.com/gh/realtime-bus/node-telegram-bot/${CIRCLE_BUILD_NUM}"
            curl -s \
              -X POST \
              -d chat_id=${GROUP_TELEGRAM_ID} \
              -d text="$(echo -e ${message})" \
              https://api.telegram.org/bot${RTB_TELEGRAM_BOT_TOKEN}/sendMessage
  prepare-dev-deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Prepare Dev Environment
          command: |
            npm --verbose test || true

  prepare-uat-deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Prepare Uat Environment
          command: |
            npm --verbose test || true
  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Deploy to Dev Environment
          command: |
            npm --verbose test || true

  deploy-uat:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Deploy to Uat Environment
          command: |
            npm --verbose test || true
  pre-prod:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Deploy to Pre Prod Environment
          command: |
            npm --verbose test || true

  prod-promotion:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Prod Promotion
          command: |
            npm --verbose test || true
            
workflows:
  version: 2.1
  realtime-bus-workflow:
    jobs:
      - build-app
      - test-app:
          requires:
            - build-app
      - prepare-dev-deploy:
          <<: *non-releasable
          requires:
            - test-app
      - prepare-uat-deploy:
          <<: *only-user-acceptance
          requires:
            - test-app
      - deploy-dev:
          requires:
            - prepare-dev-deploy
      - deploy-uat:
          <<: *only-user-acceptance
          requires:
            - prepare-uat-deploy
      - pre-prod:
          <<: *only-releasable
          requires:
            - test-app
      - prod-promotion:
          type: approval
          requires:
            - pre-prod
          filters:
            branches:
              only:
                - master
